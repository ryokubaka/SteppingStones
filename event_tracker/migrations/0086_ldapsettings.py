# Generated by Django 5.1.7 on 2025-05-19 18:42

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('event_tracker', '0085_currentoperation'),
    ]

    operations = [
        migrations.CreateModel(
            name='LDAPSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False, help_text='Enable/disable LDAP authentication')),
                ('server_uri', models.CharField(blank=True, help_text='LDAP server URI (e.g., ldap://ldap.example.com)', max_length=255)),
                ('bind_dn', models.CharField(blank=True, help_text='DN to bind to LDAP server (e.g., cn=django-agent,dc=example,dc=com)', max_length=255)),
                ('bind_password', models.CharField(blank=True, help_text='Password for bind DN', max_length=255)),
                ('user_search_base', models.CharField(blank=True, help_text='Base DN for user search (e.g., ou=users,dc=example,dc=com)', max_length=255)),
                ('user_search_filter', models.CharField(default='(uid=%(user)s)', help_text='LDAP search filter for users', max_length=255)),
                ('group_search_base', models.CharField(blank=True, help_text='Base DN for group search (e.g., ou=groups,dc=example,dc=com)', max_length=255)),
                ('group_search_filter', models.CharField(default='(objectClass=groupOfNames)', help_text='LDAP search filter for groups', max_length=255)),
                ('require_group', models.CharField(blank=True, help_text='Required group DN for access (e.g., cn=enabled,ou=groups,dc=example,dc=com)', max_length=255)),
                ('deny_group', models.CharField(blank=True, help_text='Denied group DN (e.g., cn=disabled,ou=groups,dc=example,dc=com)', max_length=255)),
                ('user_attr_map', models.JSONField(default=dict, help_text='Mapping of Django user attributes to LDAP attributes')),
                ('user_flags_by_group', models.JSONField(default=dict, help_text='Mapping of Django user flags to LDAP groups')),
                ('cache_timeout', models.IntegerField(default=3600, help_text='Cache timeout in seconds for LDAP queries')),
            ],
            options={
                'verbose_name': 'LDAP Settings',
                'verbose_name_plural': 'LDAP Settings',
            },
        ),
    ]
